// finance-tracker/back/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  username      String
  email         String          @unique
  password      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  Profile       Profile?
  Income        Income[]
  Expense       Expense[]
  Budget        Budget[]
  FinancialPlan FinancialPlan[]
  DataSharing   DataSharing[]
  SharedData    DataSharing[]   @relation("SharedWithUser")
  UserData      UserData[]
}

model Profile {
  id           Int    @id @default(autoincrement())
  userId       Int    @unique
  user         User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  profileImage String
  coverImage   String
}

model Income {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  category  String
  amount    Float
  details   String?
  createdAt DateTime @default(now())
}

model Expense {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  category  String
  amount    Float
  details   String?
  createdAt DateTime @default(now())
}

model Budget {
  id           Int      @id @default(autoincrement())
  userId       Int
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  category     String
  BudgetAmount Float
  Used         Float
  createdAt    DateTime @default(now())
}

enum IncomeCategory {
  SALARY
  FREELANCE
  INVESTMENTS
  OTHER
}

enum ExpenseCategory {
  FOOD
  TRANSPORTATION
  HOUSING
  ENTERTAINMENT
  OTHER
}

enum BudgetCategory {
  GROCERIES
  UTILITIES
  ENTERTAINMENT
  HEALTHCARE
  OTHER
}

model FinancialPlan {
  id                  Int      @id @default(autoincrement())
  userId              Int
  user                User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  PlanName            String
  targetAmount        Float
  currentAmount       Float
  amountToCollect     Float
  collectionFrequency String
  createdAt           DateTime @default(now())
}

model DataSharing {
  id               Int      @id @default(autoincrement())
  userId           Int
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  sharedWithUserId Int
  sharedWithUser   User     @relation("SharedWithUser", fields: [sharedWithUserId], references: [id])
  createdAt        DateTime @default(now())

  @@index([userId])
  @@index([sharedWithUserId])
}

model UserData {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  balance   Float
  createdAt DateTime @default(now())
}
